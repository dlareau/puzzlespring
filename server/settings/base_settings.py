"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import codecs
import os

# ====================
# CORE CONFIGURATION
# ====================

DEBUG = os.getenv("DJANGO_ENABLE_DEBUG", default="False").lower() == "true"
BASE_DIR = Path(__file__).resolve().parent.parent
ROOT_URLCONF = 'server.urls'
WSGI_APPLICATION = 'server.wsgi.application'
SITE_ID = 1  # For flatpages
SITE_TITLE = "Puzzle Hunt CMU" # TODO: Move to constance
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'


# ====================
# SECURITY SETTINGS
# ====================

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = not DEBUG
X_FRAME_OPTIONS = "SAMEORIGIN"

# ====================
# DATABASE & CACHING
# ====================

codecs.register(lambda name: codecs.lookup('utf8') if name == 'utf8mb4' else None)

if not DEBUG:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.redis.RedisCache',
            'LOCATION': 'redis://redis:6379/1',
        }
    }
else:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
        }
    }

# ====================
# AUTHENTICATION
# ====================

AUTH_USER_MODEL = 'puzzlehunt.User'
LOGIN_REDIRECT_URL = '/'

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Allauth Configuration
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https' if not DEBUG else 'http'
SOCIALACCOUNT_AUTO_SIGNUP = False
SOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True
ACCOUNT_SIGNUP_FORM_CLASS = 'puzzlehunt.forms.MyCustomSignupForm'
ACCOUNT_USER_DISPLAY = lambda user: user.display_string()
ACCOUNT_FORMS = {
    'login': 'puzzlehunt.forms.ModifiedLoginForm',
}

# ====================
# FILE HANDLING
# ====================

STATIC_ROOT = '/app/static/'
STATIC_URL = '/static/'
MEDIA_ROOT = "/app/media/"
MEDIA_URL = '/media/'
PROTECTED_URL = '/protected/'

# Sendfile Configuration
SENDFILE_BACKEND = "django_sendfile.backends.nginx"
SENDFILE_ROOT = MEDIA_ROOT

# ====================
# APPLICATION DEFINITION
# ====================

INSTALLED_APPS = [
    # Core apps
    'constance',
    'admin_interface',
    'puzzlehunt',
    
    # Django built-in
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django.contrib.sites',
    'django.contrib.flatpages',
    
    # Third-party apps
    'colorfield',
    'django_toggle_switch_widget',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.apple',
    'allauth.socialaccount.providers.discord',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.microsoft',
    'allauth.socialaccount.providers.twitter',
    'django_sendfile',
    'django_htmx',
    'impersonate',
    'huey.contrib.djhuey',
    'django_eventstream',
    'crispy_forms',
    "crispy_bulma",
    'mathfilters',
    'anymail',
]

# ====================
# MIDDLEWARE
# ====================

MIDDLEWARE = [
    'django_grip.GripMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "allauth.account.middleware.AccountMiddleware",
    'impersonate.middleware.ImpersonateMiddleware',
    'django_htmx.middleware.HtmxMiddleware',
]

# ====================
# TEMPLATE CONFIGURATION
# ====================

develop_loaders = [
    "django.template.loaders.filesystem.Loader",
    "django.template.loaders.app_directories.Loader",
]
production_loaders = [
    ("django.template.loaders.cached.Loader", [
        "django.template.loaders.filesystem.Loader",
        "django.template.loaders.app_directories.Loader",
    ])
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['/app/media/trusted/'],
        'OPTIONS': {
            'builtins': ['puzzlehunt.templatetags.hunt_tags'],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.static',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
            'loaders': develop_loaders if DEBUG else production_loaders,
        },
    },
]

# ====================
# THIRD-PARTY SETTINGS
# ====================

# Constance (Dynamic Settings)
CONSTANCE_CONFIG = {
    # Team Settings
    'NO_TEAMS_MODE': (False, 'If enabled, each user will be their own team'),
    'TEAM_MEMBERS_CAN_SEE_NAMES': (True, 'If enabled, team members will be able to see users names on the team page'),
    
    # Hunt Display Settings
    'SINGLE_HUNT_MODE': (False, 'If enabled, only one hunt will be visible and accessible'),
    'HUNTS_HAVE_LOCATION': (True, 'If enabled, hunts will display their location on the main page'),
    'SHOW_ARCHIVE_SEASONS': (True, 'If enabled, the archive page will show season labels on old hunts'),
    
    # Puzzle Display Settings
    'PROGRESS_FULL_PUZZLE_NAMES': (False, 'If enabled, the progress page will show full puzzle names'),
    'SHOW_SOLVE_COUNT_ON_PUZZLE': (True, 'If enabled, the puzzle page the current number of solves'),
    'SHOW_UPDATE_FOR_LOCKED_PUZZLES': (True, 'If enabled, updates will be shown even when the puzzle is locked'),
    
    # Registration Settings
    'HUNT_REGISTRATION_LOCKOUT': (2, 'The number of days before the hunt when registration locks'),
    
    # Communication Settings
    'CONTACT_EMAIL': ('test@test.com', 'The contact email for help links'),
    
    # Submission and Hint Settings
    'SHOW_SUBMISSION_USER': (True, 'If enabled, the submissions page will display usernames'),
    'SHOW_HINT_USER_STAFF': (True, 'If enabled, the staff hints page will show the staff responder'),
}

CONSTANCE_ADDITIONAL_FIELDS = {
    bool: ['django.forms.fields.BooleanField', {
        'widget': 'django_toggle_switch_widget.widgets.DjangoToggleSwitchWidget',
    }],
}
CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

# Crispy Forms
CRISPY_ALLOWED_TEMPLATE_PACKS = ("bulma",)
CRISPY_TEMPLATE_PACK = "bulma"
CRISPY_FAIL_SILENTLY = not DEBUG

# Impersonation
IMPERSONATE = {
    'REQUIRE_SUPERUSER': True
}

# Eventstream
GRIP_URL = 'http://pushpin:5561'
EVENTSTREAM_STORAGE_CLASS = 'django_eventstream.storage.DjangoModelStorage'
EVENTSTREAM_CHANNELMANAGER_CLASS = 'puzzlehunt.utils.PuzzlehuntChannelManager'

# Huey (Task Queue)
HUEY = {
    'huey_class': 'huey.RedisHuey',
    'name': 'puzzlehunt',
    'results': True,
    'store_none': False,
    'immediate': False,
    'utc': True,
    'connection': {
        'host': 'redis',
        'port': 6379,
        'db': 0,
    }
}

# ====================
# INTERNATIONALIZATION
# ====================

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/New_York'
USE_I18N = True
USE_TZ = True

# ====================
# LOGGING
# ====================

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '/var/log/external/django.log',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'WARNING',
            'propagate': True,
        },
        'puzzlehunt': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(message)s'
        },
    },
}

# ====================
# EMAIL
# ====================

EMAIL_CONFIGURED = False
EMAIL_USE_TLS = True
ANYMAIL = {
    'SEND_DEFAULTS': {
        'track_clicks': False,
        'track_opens': False,
    }
}

# ====================
# DEBUG SETTINGS
# ====================

if os.environ.get("ENABLE_DEBUG_TOOLBAR"):
    DEBUG_TOOLBAR_PANELS = (
        'debug_toolbar.panels.version.VersionDebugPanel',
        'debug_toolbar.panels.timer.TimerDebugPanel',
        'debug_toolbar.panels.profiling.ProfilingDebugPanel',
    )
    INSTALLED_APPS = INSTALLED_APPS + ('debug_toolbar',)
    MIDDLEWARE = ('debug_toolbar.middleware.DebugToolbarMiddleware',) + MIDDLEWARE

# ====================
# SENTRY
# ====================

if os.environ.get("SENTRY_DSN"):
    import sentry_sdk
    from sentry_sdk.integrations.django import DjangoIntegration

    sentry_sdk.init(
        dsn=os.environ.get("SENTRY_DSN"),
        integrations=[DjangoIntegration()],
        send_default_pii=True
    )
