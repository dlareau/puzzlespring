# Generated by Django 4.2 on 2024-08-22 03:49

from django.db import migrations
from django.contrib.auth.management import create_permissions


def add_perm(g, p, app, read_only, model):
    g.permissions.add(p.objects.get(content_type__app_label=app, codename=f'view_{model}'))
    if not read_only:
        g.permissions.add(p.objects.get(content_type__app_label=app, codename=f'add_{model}'))
        g.permissions.add(p.objects.get(content_type__app_label=app, codename=f'change_{model}'))
        g.permissions.add(p.objects.get(content_type__app_label=app, codename=f'delete_{model}'))


def create_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None

    ro_puzzlehunt = Group(name="Read Only Puzzlehunt")
    ro_puzzlehunt.save()
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'errata')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'event')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'hint')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'hintunlockplan')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'hunt')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'huntfile')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'prepuzzle')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'prepuzzlefile')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'puzzle')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'puzzlefile')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'puzzlestatus')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'response')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'solutionfile')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'submission')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'team')
    add_perm(ro_puzzlehunt, Permission, "puzzlehunt", True, 'flatpageproxyobject')
    add_perm(ro_puzzlehunt, Permission, "constance", True, 'constance')
    add_perm(ro_puzzlehunt, Permission, "flatpages", True, 'flatpage')
    ro_puzzlehunt.permissions.add(Permission.objects.get(content_type__app_label="constance", codename=f'view_config'))

    rw_puzzlehunt = Group(name="Full Puzzlehunt")
    rw_puzzlehunt.save()
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'errata')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'event')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'hint')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'hintunlockplan')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'hunt')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'huntfile')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'prepuzzle')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'prepuzzlefile')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'puzzle')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'puzzlefile')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'puzzlestatus')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'response')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'solutionfile')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'submission')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'team')
    add_perm(rw_puzzlehunt, Permission, "puzzlehunt", False, 'flatpageproxyobject')
    add_perm(rw_puzzlehunt, Permission, "constance", False, 'constance')
    add_perm(rw_puzzlehunt, Permission, "flatpages", False, 'flatpage')
    rw_puzzlehunt.permissions.add(Permission.objects.get(content_type__app_label="constance", codename=f'view_config'))
    rw_puzzlehunt.permissions.add(Permission.objects.get(content_type__app_label="constance", codename=f'change_config'))

    ro_auth = Group(name="Read Only Authentication")
    ro_auth.save()
    add_perm(ro_auth, Permission, "puzzlehunt", True, 'user')
    add_perm(ro_auth, Permission, "socialaccount", True, 'socialaccount')
    add_perm(ro_auth, Permission, "account", True, 'emailaddress')

    rw_auth = Group(name="Full Authentication")
    rw_auth.save()
    add_perm(rw_auth, Permission, "puzzlehunt", False, 'user')
    add_perm(rw_auth, Permission, "socialaccount", False, 'socialaccount')
    add_perm(rw_auth, Permission, "account", False, 'emailaddress')


def delete_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")

    Group.objects.get(name="Read Only Puzzlehunt").delete()
    Group.objects.get(name="Full Puzzlehunt").delete()
    Group.objects.get(name="Read Only Authentication").delete()
    Group.objects.get(name="Full Authentication").delete()


class Migration(migrations.Migration):

    dependencies = [
        ('puzzlehunt', '0003_auto_20240821_2349'),
        ('socialaccount', '0006_alter_socialaccount_extra_data'),
    ]

    operations = [
        migrations.RunPython(create_groups, delete_groups),
    ]
